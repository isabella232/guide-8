<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng"
        schematypens="http://relaxng.org/ns/structure/1.0"?>

<sect1 role="taskdef" xml:id="PropertyTask" xmlns="http://docbook.org/ns/docbook"
       xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0">
    <title>PropertyTask</title>
    <para>With <literal>PropertyTask</literal>, you can define <literal>user</literal> properties in your build file.
    </para>

    <table>
        <title>Attributes</title>
        <tgroup cols="5">
            <colspec colname="name" colnum="1" colwidth="1.5*"/>
            <colspec colname="type" colnum="2" colwidth="0.8*"/>
            <colspec colname="description" colnum="3" colwidth="3.5*"/>
            <colspec colname="default" colnum="4" colwidth="0.8*"/>
            <colspec colname="required" colnum="5" colwidth="1.2*"/>
            <thead>
                <row>
                    <entry>Name</entry>
                    <entry>Type</entry>
                    <entry>Description</entry>
                    <entry>Default</entry>
                    <entry>Required</entry>
                </row>
            </thead>
            <tbody>
                <row>
                    <entry>
                        <literal>name</literal>
                    </entry>
                    <entry>
                        <literal role="type">String</literal>
                    </entry>
                    <entry>The name of the Property.</entry>
                    <entry>n/a</entry>
                    <entry>Yes (unless using <literal>file</literal> or <literal>environment</literal>)
                    </entry>
                </row>
                <row>
                    <entry>
                        <literal>value</literal>
                    </entry>
                    <entry>
                        <literal role="type">String</literal>
                    </entry>
                    <entry>The value of the Property.</entry>
                    <entry>n/a</entry>
                    <entry>Yes (unless using <literal>file</literal> or <literal>environment</literal>)
                    </entry>
                </row>
                <row>
                    <entry>
                        <literal>environment</literal>
                    </entry>
                    <entry>
                        <literal role="type">String</literal>
                    </entry>
                    <entry>Loads properties from the environment with the specified value as prefix. Thus if you specify
                        environment="myenv" you will be able to access OS-specific environment variables via property
                        names "myenv.PATH" or "myenv.TERM".
                    </entry>
                    <entry>n/a</entry>
                    <entry>No</entry>
                </row>
                <row>
                    <entry>
                        <literal>file</literal>
                    </entry>
                    <entry>
                        <literal role="type">String</literal>
                    </entry>
                    <entry>Path to properties file.</entry>
                    <entry>n/a</entry>
                    <entry>No</entry>
                </row>
                <row>
                    <entry>
                        <literal>override</literal>
                    </entry>
                    <entry>
                        <literal role="type">Boolean</literal>
                    </entry>
                    <entry>Whether to force override of existing value.</entry>
                    <entry>
                        <literal>false</literal>
                    </entry>
                    <entry>No</entry>
                </row>
                <row>
                    <entry>
                        <literal>prefix</literal>
                    </entry>
                    <entry>
                        <literal role="type">String</literal>
                    </entry>
                    <entry>Used when properites are loaded from file. Prefix is applied to properties loaded from
                        specified file. A "." is appended to the prefix if not specified.
                    </entry>
                    <entry>n/a</entry>
                    <entry>No</entry>
                </row>
                <row>
                    <entry>
                        <literal>refid</literal>
                    </entry>
                    <entry>
                        <literal role="type">String</literal>
                    </entry>
                    <entry>A reference to a previously defined property</entry>
                    <entry>n/a</entry>
                    <entry>No</entry>
                </row>
                <row>
                    <entry>
                        <literal>logoutput</literal>
                    </entry>
                    <entry>
                        <literal role="type">Boolean</literal>
                    </entry>
                    <entry>Whether to log returned output as MSG_INFO instead of MSG_VERBOSE.
                    </entry>
                    <entry>
                        <literal>true</literal>
                    </entry>
                    <entry>No</entry>
                </row>
                <row>
                    <entry>
                        <literal>quiet</literal>
                    </entry>
                    <entry>
                        <literal role="type">Boolean</literal>
                    </entry>
                    <entry>Whether to display a warning if the property file does not exist.</entry>
                    <entry>
                        <literal>true</literal>
                    </entry>
                    <entry>No</entry>
                </row>
                <row>
                    <entry>
                        <literal>required</literal>
                    </entry>
                    <entry>
                        <literal role="type">Boolean</literal>
                    </entry>
                    <entry>Whether to halt with an error if the property file does not exist.</entry>
                    <entry>
                        <literal>false</literal>
                    </entry>
                    <entry>No</entry>
                </row>
            </tbody>
        </tgroup>
    </table>
    <note>
        <para>Important note about scope: when the <literal>&lt;property&gt;</literal> tag is called inside a
            <literal>&lt;phingcall&gt;</literal> tag, any properties are set in a new local scope. Thus, any properties or
            other variables set inside that scope will cease to exist (or revert to their previous value) once the
            parent <literal>&lt;phingcall&gt;</literal> tag completes.
        </para>
    </note>
    <sect2>
        <title>Examples</title>
        <programlisting language="xml">&lt;property name="strings.test" value="Harr harr, more power!" /&gt;
&lt;echo message="${strings.test}" /&gt;

&lt;property name="foo.bar" value="Yet another property..." /&gt;
&lt;echo message="${foo.bar}" /&gt;

&lt;property file="build.properties" /&gt;

&lt;property environment="env" /&gt;

&lt;property name="newproperty" value="Hello"&gt;
    &lt;filterchain&gt;
        &lt;replaceregexp&gt;
            &lt;regexp pattern="Hello" replace="World" ignoreCase="true"/&gt;
        &lt;/replaceregexp&gt;
    &lt;/filterchain&gt;
&lt;/property&gt;
        </programlisting>
    </sect2>
    <sect2 role="nestedtags">
        <title>Supported Nested Tags:</title>
        <itemizedlist>
            <listitem>
                <para>
                    <literal>
                        <link linkend="app.corefilters">filterchain</link>
                    </literal>
                </para>
            </listitem>
        </itemizedlist>
    </sect2>
</sect1>
