<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng"
        schematypens="http://relaxng.org/ns/structure/1.0"?>

<sect1 role="taskdef" xml:id="TaskdefTask" xmlns="http://docbook.org/ns/docbook"
       xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0">
    <title>TaskdefTask</title>
    <para>With the <literal>TaskdefTask</literal> you can import a user task into your buildfile.
    </para>

    <table>
        <title>Attributes</title>
        <tgroup cols="5">
            <colspec colname="name" colnum="1" colwidth="1.5*"/>
            <colspec colname="type" colnum="2" colwidth="0.8*"/>
            <colspec colname="description" colnum="3" colwidth="3.5*"/>
            <colspec colname="default" colnum="4" colwidth="0.8*"/>
            <colspec colname="required" colnum="5" colwidth="1.2*"/>
            <thead>
                <row>
                    <entry>Name</entry>
                    <entry>Type</entry>
                    <entry>Description</entry>
                    <entry>Default</entry>
                    <entry>Required</entry>
                </row>
            </thead>
            <tbody>
                <row>
                    <entry>
                        <literal>classname</literal>
                    </entry>
                    <entry>
                        <literal role="type">String</literal>
                    </entry>
                    <entry>The path to the class that defines the TaskClass.</entry>
                    <entry>n/a</entry>
                    <entry>Yes, unless the <literal>file</literal> attribute has been specified.
                    </entry>
                </row>
                <row>
                    <entry>
                        <literal>name</literal>
                    </entry>
                    <entry>
                        <literal role="type">String</literal>
                    </entry>
                    <entry>The name the task is available as after importing. If you specify "validate", for example,
                        you can access the task imported here with <literal>&lt;validate&gt;</literal>.
                    </entry>
                    <entry>n/a</entry>
                    <entry>Yes, unless the <literal>file</literal> attribute has been
                        specified.
                    </entry>
                </row>
                <row>
                    <entry>
                        <literal>file</literal>
                    </entry>
                    <entry>
                        <literal role="type">String</literal>
                    </entry>
                    <entry>Name of the file to load definitions from.</entry>
                    <entry>n/a</entry>
                    <entry>No</entry>
                </row>
                <row>
                    <entry>
                        <literal>classpath</literal>
                    </entry>
                    <entry>
                        <literal role="type">String</literal>
                    </entry>
                    <entry>The classpath to use when including classes. This is added to PHP's include_path.</entry>
                    <entry>n/a</entry>
                    <entry>No</entry>
                </row>
                <row>
                    <entry>
                        <literal>classpathref</literal>
                    </entry>
                    <entry>
                        <literal role="type">String</literal>
                    </entry>
                    <entry>Reference to classpath to use when including classes. This is added to PHP's include_path.
                    </entry>
                    <entry>n/a</entry>
                    <entry>No</entry>
                </row>
            </tbody>
        </tgroup>
    </table>
    <sect2>
        <title>Examples</title>
        <programlisting language="xml">&lt;!-- Includes the Task named "ValidateHTMLTask" and makes it available by
    &lt;validatehtml&gt; --&gt;
&lt;taskdef classname="user.tasks.ValidateHTMLTask" name="validatehtml" /&gt;

&lt;!-- Includes the Task "RebootTask" from "user/sometasks" somewhere inside
    the $PHP_CLASSPATH --&gt;
&lt;taskdef classname="user.sometasks.RebootTask" name="reboot" /&gt;

&lt;!-- Includes all tasks from the property file. Each line in the property
    file defines a task in the format: name=path.to.Task --&gt;
&lt;taskdef file="/path/to/mytasks.properties" /&gt;
        </programlisting>
        <para><emphasis role="bold">NB:</emphasis> Taskdef now supports the PEAR-style naming convention to define and
            load tasks:
        </para>
        <programlisting language="xml">&lt;taskdef name="sampletask" classname="Dir_Subdir_SampleTask"/&gt;
        </programlisting>
        <para>will load class <literal>Dir_Subdir_SampleTask</literal> from file
            <filename>Dir/Subdir/SampleTask.php</filename>.
        </para>
    </sect2>

    <sect2 role="nestedtags">
        <title>Supported Nested Tags</title>
        <itemizedlist>
            <listitem>
                <para>
                    <literal>
                        <link linkend="path">classpath</link>
                    </literal>
                </para>
            </listitem>
        </itemizedlist>
    </sect2>
</sect1>
